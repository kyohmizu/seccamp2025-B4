apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: seccamp-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: mariadb
        image: mariadb:11.3
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: MYSQL_DATABASE
          value: "seccamp2025"
        - name: MYSQL_USER
          value: "rootuser"
        - name: MYSQL_PASSWORD
          value: "password"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: db-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: db-init
        configMap:
          name: db-init-sql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init-sql
  namespace: seccamp-app
binaryData:
  init.sql: |-
    VVNFIHNlY2NhbXAyMDI1OwoKLS0gTWFyaWFEQiBpbml0aWFsaXphdGlvbiBTUUwgKEVuZ2xpc2ggb25seSkKLS0gVXNlciBpbmZvcm1hdGlvbiB0YWJsZQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB1c2VycyAoCiAgICBpZCBJTlQgQVVUT19JTkNSRU1FTlQgUFJJTUFSWSBLRVksCiAgICB1c2VybmFtZSBWQVJDSEFSKDY0KSBVTklRVUUgTk9UIE5VTEwsCiAgICBmdWxsX25hbWUgVkFSQ0hBUigxMjgpLAogICAgcGFzc3dvcmQgVkFSQ0hBUigyNTYpIE5PVCBOVUxMLAogICAgaXNfYWRtaW4gQk9PTEVBTiBERUZBVUxUIEZBTFNFCik7CgotLSBMZWFybmluZyBjb250ZW50IGluZm9ybWF0aW9uIHRhYmxlCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNvdXJzZXMgKAogICAgaWQgSU5UIEFVVE9fSU5DUkVNRU5UIFBSSU1BUlkgS0VZLAogICAgdGl0bGUgVkFSQ0hBUigxMjgpIE5PVCBOVUxMLAogICAgZGVzY3JpcHRpb24gVEVYVAopOwoKLS0gTGVhcm5pbmcgcHJvZ3Jlc3MgdGFibGUgKHdpdGggY29tcG9zaXRlIHVuaXF1ZSBjb25zdHJhaW50KQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwcm9ncmVzcyAoCiAgICBpZCBJTlQgQVVUT19JTkNSRU1FTlQgUFJJTUFSWSBLRVksCiAgICB1c2VyX2lkIElOVCBOT1QgTlVMTCwKICAgIGNvdXJzZV9pZCBJTlQgTk9UIE5VTEwsCiAgICBwZXJjZW50IElOVCBERUZBVUxUIDAsCiAgICB1cGRhdGVkX2F0IERBVEVUSU1FLAogICAgRk9SRUlHTiBLRVkgKHVzZXJfaWQpIFJFRkVSRU5DRVMgdXNlcnMoaWQpLAogICAgRk9SRUlHTiBLRVkgKGNvdXJzZV9pZCkgUkVGRVJFTkNFUyBjb3Vyc2VzKGlkKSwKICAgIFVOSVFVRSBLRVkgdXNlcl9jb3Vyc2VfdW5pcXVlICh1c2VyX2lkLCBjb3Vyc2VfaWQpCik7CgotLSBTYW1wbGUgZGF0YSBpbnNlcnRpb24gU1FMCi0tIFVzZXIgc2FtcGxlIGRhdGEgKEVuZ2xpc2ggbmFtZXMgb25seSkKSU5TRVJUIElOVE8gdXNlcnMgKHVzZXJuYW1lLCBmdWxsX25hbWUsIHBhc3N3b3JkLCBpc19hZG1pbikgVkFMVUVTCiAgKCdzYXRvJywgJ1Rhcm8gU2F0bycsICdwYXNzMScsIEZBTFNFKSwKICAoJ3N1enVraScsICdIYW5ha28gU3V6dWtpJywgJ3Bhc3MyJywgRkFMU0UpLAogICgndGFrYWhhc2hpJywgJ0tlbmljaGkgVGFrYWhhc2hpJywgJ3Bhc3MzJywgRkFMU0UpLAogICgndGFuYWthJywgJ1l1bWkgVGFuYWthJywgJ3Bhc3M0JywgRkFMU0UpLAogICgnd2F0YW5hYmUnLCAnU2hvdGEgV2F0YW5hYmUnLCAncGFzczUnLCBGQUxTRSksCiAgKCdpdG8nLCAnTWlzYWtpIEl0bycsICdwYXNzNicsIEZBTFNFKSwKICAoJ3lhbWFtb3RvJywgJ1l1dG8gWWFtYW1vdG8nLCAncGFzczcnLCBGQUxTRSksCiAgKCduYWthbXVyYScsICdBeWFrYSBOYWthbXVyYScsICdwYXNzOCcsIEZBTFNFKSwKICAoJ2tvYmF5YXNoaScsICdOYW90byBLb2JheWFzaGknLCAncGFzczknLCBGQUxTRSksCiAgKCdrYXRvJywgJ0VtaSBLYXRvJywgJ3Bhc3MxMCcsIEZBTFNFKSwKICAoJ3lvc2hpZGEnLCAnVGFrdW1pIFlvc2hpZGEnLCAncGFzczExJywgRkFMU0UpLAogICgneWFtYWRhJywgJ1Nhb3JpIFlhbWFkYScsICdwYXNzMTInLCBGQUxTRSksCiAgKCdzYXNha2knLCAnUnlvc3VrZSBTYXNha2knLCAncGFzczEzJywgRkFMU0UpLAogICgneWFtYWd1Y2hpJywgJ01heXVtaSBZYW1hZ3VjaGknLCAncGFzczE0JywgRkFMU0UpLAogICgnbWF0c3Vtb3RvJywgJ1RvbW95YSBNYXRzdW1vdG8nLCAncGFzczE1JywgRkFMU0UpLAogICgnaW5vdWUnLCAnQ2hpaGlybyBJbm91ZScsICdwYXNzMTYnLCBGQUxTRSksCiAgKCdraW11cmEnLCAnRGFpc3VrZSBLaW11cmEnLCAncGFzczE3JywgRkFMU0UpLAogICgnaGF5YXNoaScsICdNaXdhIEhheWFzaGknLCAncGFzczE4JywgRkFMU0UpLAogICgnc2hpbWl6dScsICdLYXp1eWEgU2hpbWl6dScsICdwYXNzMTknLCBGQUxTRSksCiAgKCdzYWl0bycsICdLYW9yaSBTYWl0bycsICdwYXNzMjAnLCBGQUxTRSksCiAgKCdhZG1pbicsICdBZG1pbmlzdHJhdG9yJywgJ2FkbWlucGFzcycsIFRSVUUpOwoKLS0gQ291cnNlIHNhbXBsZSBkYXRhIChFbmdsaXNoIG9ubHkgLSBCYXNpYyB0byBBZHZhbmNlZCkKSU5TRVJUIElOVE8gY291cnNlcyAodGl0bGUsIGRlc2NyaXB0aW9uKSBWQUxVRVMKICAtLSBCYXNpYy9JbnRyb2R1Y3Rpb24gQ291cnNlcyAoMS0xMCkKICAoJ1B5dGhvbiBJbnRyb2R1Y3Rpb24nLCAnTGVhcm4gdGhlIGJhc2ljcyBvZiBQeXRob24gcHJvZ3JhbW1pbmcnKSwKICAoJ0t1YmVybmV0ZXMgRnVuZGFtZW50YWxzJywgJ0xlYXJuIHRoZSBmdW5kYW1lbnRhbHMgb2YgS3ViZXJuZXRlcycpLAogICgnR28gTGFuZ3VhZ2UgSW50cm9kdWN0aW9uJywgJ0xlYXJuIHRoZSBiYXNpY3Mgb2YgR28gcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UnKSwKICAoJ1JlYWN0IEludHJvZHVjdGlvbicsICdMZWFybiB0aGUgYmFzaWNzIG9mIFJlYWN0IGRldmVsb3BtZW50JyksCiAgKCdTZWN1cml0eSBGdW5kYW1lbnRhbHMnLCAnTGVhcm4gdGhlIGZ1bmRhbWVudGFscyBvZiBjeWJlcnNlY3VyaXR5JyksCiAgKCdMaW51eCBJbnRyb2R1Y3Rpb24nLCAnTGVhcm4gdGhlIGJhc2ljcyBvZiBMaW51eCBvcGVyYXRpbmcgc3lzdGVtJyksCiAgKCdDbG91ZCBGdW5kYW1lbnRhbHMnLCAnTGVhcm4gdGhlIGZ1bmRhbWVudGFscyBvZiBjbG91ZCB0ZWNobm9sb2dpZXMnKSwKICAoJ05ldHdvcmsgRnVuZGFtZW50YWxzJywgJ0xlYXJuIHRoZSBiYXNpY3Mgb2YgY29tcHV0ZXIgbmV0d29ya2luZycpLAogICgnRG9ja2VyIEludHJvZHVjdGlvbicsICdMZWFybiB0aGUgYmFzaWNzIG9mIERvY2tlciBjb250YWluZXJpemF0aW9uJyksCiAgKCdDSS9DRCBJbnRyb2R1Y3Rpb24nLCAnTGVhcm4gdGhlIGJhc2ljcyBvZiBDb250aW51b3VzIEludGVncmF0aW9uIGFuZCBEZXBsb3ltZW50JyksCiAgCiAgLS0gSW50ZXJtZWRpYXRlIENvdXJzZXMgKDExLTIwKQogICgnUHl0aG9uIFdlYiBEZXZlbG9wbWVudCcsICdCdWlsZCB3ZWIgYXBwbGljYXRpb25zIHVzaW5nIERqYW5nbyBhbmQgRmxhc2snKSwKICAoJ0t1YmVybmV0ZXMgT3BlcmF0aW9ucycsICdBZHZhbmNlZCBLdWJlcm5ldGVzIGNsdXN0ZXIgbWFuYWdlbWVudCBhbmQgb3BlcmF0aW9ucycpLAogICgnR28gTWljcm9zZXJ2aWNlcycsICdCdWlsZCBzY2FsYWJsZSBtaWNyb3NlcnZpY2VzIHdpdGggR28nKSwKICAoJ1JlYWN0IFN0YXRlIE1hbmFnZW1lbnQnLCAnQWR2YW5jZWQgUmVhY3QgcGF0dGVybnMgd2l0aCBSZWR1eCBhbmQgQ29udGV4dCBBUEknKSwKICAoJ1BlbmV0cmF0aW9uIFRlc3RpbmcnLCAnTGVhcm4gZXRoaWNhbCBoYWNraW5nIGFuZCB2dWxuZXJhYmlsaXR5IGFzc2Vzc21lbnQnKSwKICAoJ0xpbnV4IFN5c3RlbSBBZG1pbmlzdHJhdGlvbicsICdBZHZhbmNlZCBMaW51eCBzZXJ2ZXIgbWFuYWdlbWVudCBhbmQgYXV0b21hdGlvbicpLAogICgnQVdTIENsb3VkIEFyY2hpdGVjdHVyZScsICdEZXNpZ24gYW5kIGltcGxlbWVudCBBV1MgY2xvdWQgc29sdXRpb25zJyksCiAgKCdOZXR3b3JrIFNlY3VyaXR5JywgJ0ltcGxlbWVudCBuZXR3b3JrIHNlY3VyaXR5IG1lYXN1cmVzIGFuZCBwcm90b2NvbHMnKSwKICAoJ0RvY2tlciBPcmNoZXN0cmF0aW9uJywgJ0NvbnRhaW5lciBvcmNoZXN0cmF0aW9uIHdpdGggRG9ja2VyIFN3YXJtJyksCiAgKCdEZXZPcHMgUGlwZWxpbmUgRGVzaWduJywgJ0Rlc2lnbiBhbmQgaW1wbGVtZW50IGNvbXByZWhlbnNpdmUgRGV2T3BzIHBpcGVsaW5lcycpLAogIAogIC0tIEFkdmFuY2VkIENvdXJzZXMgKDIxLTMwKQogICgnUHl0aG9uIE1hY2hpbmUgTGVhcm5pbmcnLCAnQWR2YW5jZWQgTUwgYWxnb3JpdGhtcyBhbmQgZGF0YSBzY2llbmNlIHdpdGggUHl0aG9uJyksCiAgKCdLdWJlcm5ldGVzIFNlY3VyaXR5JywgJ0FkdmFuY2VkIHNlY3VyaXR5IHByYWN0aWNlcyBmb3IgS3ViZXJuZXRlcyBjbHVzdGVycycpLAogICgnR28gUGVyZm9ybWFuY2UgT3B0aW1pemF0aW9uJywgJ0hpZ2gtcGVyZm9ybWFuY2UgR28gYXBwbGljYXRpb25zIGFuZCBwcm9maWxpbmcnKSwKICAoJ1JlYWN0IE5hdGl2ZSBEZXZlbG9wbWVudCcsICdDcm9zcy1wbGF0Zm9ybSBtb2JpbGUgZGV2ZWxvcG1lbnQgd2l0aCBSZWFjdCBOYXRpdmUnKSwKICAoJ0FkdmFuY2VkIFRocmVhdCBIdW50aW5nJywgJ0FkdmFuY2VkIGN5YmVyc2VjdXJpdHkgdGhyZWF0IGRldGVjdGlvbiBhbmQgYW5hbHlzaXMnKSwKICAoJ0xpbnV4IEtlcm5lbCBEZXZlbG9wbWVudCcsICdVbmRlcnN0YW5kaW5nIGFuZCBtb2RpZnlpbmcgdGhlIExpbnV4IGtlcm5lbCcpLAogICgnTXVsdGktQ2xvdWQgQXJjaGl0ZWN0dXJlJywgJ0Rlc2lnbiBzb2x1dGlvbnMgYWNyb3NzIG11bHRpcGxlIGNsb3VkIHByb3ZpZGVycycpLAogICgnTmV0d29yayBQcm90b2NvbCBBbmFseXNpcycsICdEZWVwIGRpdmUgaW50byBuZXR3b3JrIHByb3RvY29scyBhbmQgdHJhZmZpYyBhbmFseXNpcycpLAogICgnS3ViZXJuZXRlcyBDdXN0b20gUmVzb3VyY2VzJywgJ0RldmVsb3AgY3VzdG9tIGNvbnRyb2xsZXJzIGFuZCBvcGVyYXRvcnMnKSwKICAoJ0luZnJhc3RydWN0dXJlIGFzIENvZGUnLCAnQWR2YW5jZWQgVGVycmFmb3JtIGFuZCBpbmZyYXN0cnVjdHVyZSBhdXRvbWF0aW9uJyksCiAgCiAgLS0gRXhwZXJ0L1NwZWNpYWxpemVkIENvdXJzZXMgKDMxLTM1KQogICgnQUkvTUwgU3lzdGVtIERlc2lnbicsICdEZXNpZ24gYW5kIGRlcGxveSBwcm9kdWN0aW9uIE1MIHN5c3RlbXMgYXQgc2NhbGUnKSwKICAoJ0Nsb3VkIE5hdGl2ZSBTZWN1cml0eScsICdDb21wcmVoZW5zaXZlIHNlY3VyaXR5IGZvciBjbG91ZC1uYXRpdmUgYXBwbGljYXRpb25zJyksCiAgKCdEaXN0cmlidXRlZCBTeXN0ZW1zIEFyY2hpdGVjdHVyZScsICdEZXNpZ24gaGlnaGx5IHNjYWxhYmxlIGRpc3RyaWJ1dGVkIHN5c3RlbXMnKSwKICAoJ0Jsb2NrY2hhaW4gRGV2ZWxvcG1lbnQnLCAnU21hcnQgY29udHJhY3QgZGV2ZWxvcG1lbnQgYW5kIERlRmkgYXBwbGljYXRpb25zJyksCiAgKCdRdWFudHVtIENvbXB1dGluZyBGdW5kYW1lbnRhbHMnLCAnSW50cm9kdWN0aW9uIHRvIHF1YW50dW0gYWxnb3JpdGhtcyBhbmQgY29tcHV0aW5nJyk7CgotLSBMZWFybmluZyBwcm9ncmVzcyBzYW1wbGUgZGF0YSAoZXhwYW5kZWQgd2l0aCBhZHZhbmNlZCBjb3Vyc2VzKQpJTlNFUlQgSU5UTyBwcm9ncmVzcyAodXNlcl9pZCwgY291cnNlX2lkLCBwZXJjZW50LCB1cGRhdGVkX2F0KSBWQUxVRVMKICAtLSBCYXNpYyB1c2VycyBzdGFydGluZyB3aXRoIGZ1bmRhbWVudGFscwogICgxLCAxLCA1MCwgTk9XKCkpLCAoMSwgMiwgMCwgTk9XKCkpLCAoMSwgMywgMTAwLCBOT1coKSksCiAgKDIsIDEsIDgwLCBOT1coKSksICgyLCAyLCAyMCwgTk9XKCkpLCAoMiwgMywgMCwgTk9XKCkpLAogICgzLCAxLCAwLCBOT1coKSksICgzLCAyLCAwLCBOT1coKSksICgzLCAzLCAwLCBOT1coKSksCiAgCiAgLS0gQWR2YW5jZWQgdXNlcnMgd2l0aCBtdWx0aXBsZSBjb21wbGV0ZWQgY291cnNlcwogICg0LCAxLCAxMDAsIE5PVygpKSwgKDQsIDIsIDEwMCwgTk9XKCkpLCAoNCwgMywgMTAwLCBOT1coKSksCiAgKDQsIDExLCA3NSwgTk9XKCkpLCAoNCwgMTIsIDUwLCBOT1coKSksICg0LCAyMSwgMjUsIE5PVygpKSwKICAKICAtLSBJbnRlcm1lZGlhdGUgdXNlcnMgcHJvZ3Jlc3NpbmcgdGhyb3VnaCBkaWZmZXJlbnQgcGF0aHMKICAoNSwgMSwgMTAsIE5PVygpKSwgKDUsIDIsIDMwLCBOT1coKSksICg1LCAzLCA2MCwgTk9XKCkpLAogICg2LCA1LCAxMDAsIE5PVygpKSwgKDYsIDE1LCA4MCwgTk9XKCkpLCAoNiwgMjUsIDQwLCBOT1coKSksCiAgKDcsIDYsIDEwMCwgTk9XKCkpLCAoNywgMTYsIDYwLCBOT1coKSksICg3LCAyNiwgMjAsIE5PVygpKSwKICAoOCwgNywgMTAwLCBOT1coKSksICg4LCAxNywgOTAsIE5PVygpKSwgKDgsIDI3LCA3MCwgTk9XKCkpLAogIAogIC0tIERldk9wcyBmb2N1c2VkIGxlYXJuaW5nIHBhdGgKICAoOSwgOSwgMTAwLCBOT1coKSksICg5LCAxMCwgMTAwLCBOT1coKSksICg5LCAxOSwgODUsIE5PVygpKSwKICAoOSwgMjAsIDY1LCBOT1coKSksICg5LCAyOSwgNDUsIE5PVygpKSwgKDksIDMwLCAyNSwgTk9XKCkpLAogIAogIC0tIFNlY3VyaXR5IGZvY3VzZWQgbGVhcm5pbmcgcGF0aAogICgxMCwgNSwgMTAwLCBOT1coKSksICgxMCwgMTUsIDEwMCwgTk9XKCkpLCAoMTAsIDI1LCA5MCwgTk9XKCkpLAogICgxMCwgMTgsIDc1LCBOT1coKSksICgxMCwgMzIsIDUwLCBOT1coKSksCiAgCiAgLS0gRnVsbC1zdGFjayBkZXZlbG9wbWVudCBwYXRoCiAgKDExLCAxLCAxMDAsIE5PVygpKSwgKDExLCA0LCAxMDAsIE5PVygpKSwgKDExLCAxMSwgODAsIE5PVygpKSwKICAoMTEsIDE0LCA2MCwgTk9XKCkpLCAoMTEsIDI0LCA0MCwgTk9XKCkpLAogIAogIC0tIENsb3VkIGFyY2hpdGVjdHVyZSBzcGVjaWFsaXN0cwogICgxMiwgNywgMTAwLCBOT1coKSksICgxMiwgMTcsIDEwMCwgTk9XKCkpLCAoMTIsIDI3LCA4NSwgTk9XKCkpLAogICgxMiwgMzAsIDcwLCBOT1coKSksICgxMiwgMzIsIDMwLCBOT1coKSksCiAgCiAgLS0gTWFjaGluZSBMZWFybmluZyBlbnRodXNpYXN0cwogICgxMywgMSwgMTAwLCBOT1coKSksICgxMywgMjEsIDkwLCBOT1coKSksICgxMywgMzEsIDYwLCBOT1coKSksCiAgCiAgLS0gRW1lcmdpbmcgdGVjaG5vbG9neSBleHBsb3JlcnMKICAoMTQsIDM0LCA4MCwgTk9XKCkpLCAoMTQsIDM1LCA0MCwgTk9XKCkpLAogIAogIC0tIENvbXByZWhlbnNpdmUgbGVhcm5lcnMKICAoMTUsIDEsIDEwMCwgTk9XKCkpLCAoMTUsIDUsIDEwMCwgTk9XKCkpLCAoMTUsIDcsIDEwMCwgTk9XKCkpLAogICgxNSwgMTEsIDkwLCBOT1coKSksICgxNSwgMTUsIDgwLCBOT1coKSksICgxNSwgMTcsIDcwLCBOT1coKSksCiAgKDE1LCAyMSwgNjAsIE5PVygpKSwgKDE1LCAyNSwgNTAsIE5PVygpKSwgKDE1LCAyNywgNDAsIE5PVygpKTsKCg==
